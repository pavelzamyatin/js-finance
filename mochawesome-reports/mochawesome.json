{
  "reportTitle": "js-finance",
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2016-12-12T23:07:20.801Z",
    "end": "2016-12-12T23:07:21.174Z",
    "duration": 373,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "General Tests: ",
        "suites": [],
        "tests": [
          {
            "title": "should show main page",
            "fullTitle": "General Tests:  should show main page",
            "timedOut": false,
            "duration": 56,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "da95b00b-8798-466d-a1a7-130b44fbc893",
            "parentUUID": "c82c35ba-6f25-4316-b0cd-98888c41c20a",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/test.js",
        "uuid": "c82c35ba-6f25-4316-b0cd-98888c41c20a",
        "fullFile": "/home/corw/DEV/GIT/js-finance/test/test.js",
        "passes": [
          {
            "title": "should show main page",
            "fullTitle": "General Tests:  should show main page",
            "timedOut": false,
            "duration": 56,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "da95b00b-8798-466d-a1a7-130b44fbc893",
            "parentUUID": "c82c35ba-6f25-4316-b0cd-98888c41c20a",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 56
      },
      {
        "title": "API Tests: ",
        "suites": [],
        "tests": [
          {
            "title": "should list ALL entries on /api/entries GET",
            "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "75b76018-02c6-4063-a96e-0a0fdcbe7bca",
            "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
            "skipped": false
          },
          {
            "title": "should get entry by ID on /api/entry/:id GET",
            "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
            "timedOut": false,
            "duration": 22,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "e07c9308-56ba-4631-b817-ed4a10462784",
            "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
            "skipped": false
          },
          {
            "title": "should post a new entry on /api/entries POST",
            "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
            "timedOut": false,
            "duration": 34,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "ac8cd63f-111c-484a-b10e-1c7cb631ef04",
            "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
            "skipped": false
          },
          {
            "title": "should change an entry on /api/entry/:id PUT",
            "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "ca7e3316-4def-4431-9587-2be3a7d178fd",
            "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
            "skipped": false
          },
          {
            "title": "should delete a SINGLE entry on /entry/<id> DELETE",
            "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
            "timedOut": false,
            "duration": 67,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "2bb97cdd-b6ec-472f-9eb7-4ec079d0770d",
            "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/test.js",
        "uuid": "a1cdde14-1b9c-479d-b973-934a752da8a8",
        "fullFile": "/home/corw/DEV/GIT/js-finance/test/test.js",
        "passes": [
          {
            "title": "should list ALL entries on /api/entries GET",
            "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "75b76018-02c6-4063-a96e-0a0fdcbe7bca",
            "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
            "skipped": false
          },
          {
            "title": "should get entry by ID on /api/entry/:id GET",
            "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
            "timedOut": false,
            "duration": 22,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "e07c9308-56ba-4631-b817-ed4a10462784",
            "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
            "skipped": false
          },
          {
            "title": "should post a new entry on /api/entries POST",
            "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
            "timedOut": false,
            "duration": 34,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "ac8cd63f-111c-484a-b10e-1c7cb631ef04",
            "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
            "skipped": false
          },
          {
            "title": "should change an entry on /api/entry/:id PUT",
            "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "ca7e3316-4def-4431-9587-2be3a7d178fd",
            "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
            "skipped": false
          },
          {
            "title": "should delete a SINGLE entry on /entry/<id> DELETE",
            "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
            "timedOut": false,
            "duration": 67,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "2bb97cdd-b6ec-472f-9eb7-4ec079d0770d",
            "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 171
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "c9f7023a-b673-4903-8e4d-74bc510fd143",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should show main page",
      "fullTitle": "General Tests:  should show main page",
      "timedOut": false,
      "duration": 56,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "ca9e10b0-9964-4d45-a448-dafb0d16c362",
      "parentUUID": "c82c35ba-6f25-4316-b0cd-98888c41c20a",
      "skipped": false
    },
    {
      "title": "should list ALL entries on /api/entries GET",
      "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "941a1878-4fd5-44a5-aea9-bde3ced48078",
      "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
      "skipped": false
    },
    {
      "title": "should get entry by ID on /api/entry/:id GET",
      "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "987d2f5b-3203-4319-acac-2420a4ce9ff7",
      "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
      "skipped": false
    },
    {
      "title": "should post a new entry on /api/entries POST",
      "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
      "timedOut": false,
      "duration": 34,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "3b683106-71e5-47c4-80e8-639423c0d922",
      "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
      "skipped": false
    },
    {
      "title": "should change an entry on /api/entry/:id PUT",
      "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "37e4f224-cc09-4b72-9a67-30b2b7fe11ad",
      "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
      "skipped": false
    },
    {
      "title": "should delete a SINGLE entry on /entry/<id> DELETE",
      "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
      "timedOut": false,
      "duration": 67,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "6e5d39eb-911f-4687-8287-f76426b231c4",
      "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should show main page",
      "fullTitle": "General Tests:  should show main page",
      "timedOut": false,
      "duration": 56,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "81e01c2b-5d75-414e-ace4-eb70accddf53",
      "parentUUID": "c82c35ba-6f25-4316-b0cd-98888c41c20a",
      "skipped": false
    },
    {
      "title": "should list ALL entries on /api/entries GET",
      "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "bde29852-30d1-4f4a-8c24-5d382559567c",
      "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
      "skipped": false
    },
    {
      "title": "should get entry by ID on /api/entry/:id GET",
      "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "51f251ea-3701-401a-b6cf-b439bd7cb481",
      "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
      "skipped": false
    },
    {
      "title": "should post a new entry on /api/entries POST",
      "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
      "timedOut": false,
      "duration": 34,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "2da33e00-5dda-4c39-bc6c-589146ef3f71",
      "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
      "skipped": false
    },
    {
      "title": "should change an entry on /api/entry/:id PUT",
      "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "bceb90ce-c8e5-495b-89b1-5260ebd26a67",
      "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
      "skipped": false
    },
    {
      "title": "should delete a SINGLE entry on /entry/<id> DELETE",
      "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
      "timedOut": false,
      "duration": 67,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "55b023cd-8ac9-4e07-9f3c-1c62edd7c4cb",
      "parentUUID": "a1cdde14-1b9c-479d-b973-934a752da8a8",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}