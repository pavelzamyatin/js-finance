{
  "reportTitle": "js-finance",
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2016-12-09T01:39:30.840Z",
    "end": "2016-12-09T01:39:31.093Z",
    "duration": 253,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "General Tests: ",
        "suites": [],
        "tests": [
          {
            "title": "should show main page",
            "fullTitle": "General Tests:  should show main page",
            "timedOut": false,
            "duration": 56,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "f879dedf-0c13-428c-96bf-585d1514e12a",
            "parentUUID": "d3de6b22-e93b-43ab-8686-0c923de03a40",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/test.js",
        "uuid": "d3de6b22-e93b-43ab-8686-0c923de03a40",
        "fullFile": "/home/corw/DEV/GIT/js-finance/test/test.js",
        "passes": [
          {
            "title": "should show main page",
            "fullTitle": "General Tests:  should show main page",
            "timedOut": false,
            "duration": 56,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "f879dedf-0c13-428c-96bf-585d1514e12a",
            "parentUUID": "d3de6b22-e93b-43ab-8686-0c923de03a40",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 56
      },
      {
        "title": "API Tests: ",
        "suites": [],
        "tests": [
          {
            "title": "should list ALL entries on /api/entries GET",
            "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
            "timedOut": false,
            "duration": 25,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry'</span>)<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "0dbdee56-5422-4681-b016-42f9030d86e7",
            "parentUUID": "22e67d76-0da7-42d5-b3b5-df567f8ebaf6",
            "skipped": false
          },
          {
            "title": "should post a new entry on /api/entries POST",
            "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
            "timedOut": false,
            "duration": 72,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "4b1b4ddf-fb9d-4875-8542-061ce77ec609",
            "parentUUID": "22e67d76-0da7-42d5-b3b5-df567f8ebaf6",
            "skipped": false
          },
          {
            "title": "should delete a SINGLE entry on /entry/<id> DELETE",
            "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
            "timedOut": false,
            "duration": 22,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.have.property(<span class=\"hljs-string\">'REMOVED'</span>);<br>        res.body.REMOVED.should.be.a(<span class=\"hljs-string\">'object'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.REMOVED.user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.REMOVED.sum.should.equal(<span class=\"hljs-number\">100.10</span>);<br>        res.body.REMOVED.comment.should.equal(<span class=\"hljs-string\">'New nice entry'</span>);<br>        done();<br>    });<br>  });",
            "isRoot": false,
            "uuid": "6d8838e5-a270-4601-82d4-c7ae9fd8d6ae",
            "parentUUID": "22e67d76-0da7-42d5-b3b5-df567f8ebaf6",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/test.js",
        "uuid": "22e67d76-0da7-42d5-b3b5-df567f8ebaf6",
        "fullFile": "/home/corw/DEV/GIT/js-finance/test/test.js",
        "passes": [
          {
            "title": "should list ALL entries on /api/entries GET",
            "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
            "timedOut": false,
            "duration": 25,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry'</span>)<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "0dbdee56-5422-4681-b016-42f9030d86e7",
            "parentUUID": "22e67d76-0da7-42d5-b3b5-df567f8ebaf6",
            "skipped": false
          },
          {
            "title": "should post a new entry on /api/entries POST",
            "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
            "timedOut": false,
            "duration": 72,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "4b1b4ddf-fb9d-4875-8542-061ce77ec609",
            "parentUUID": "22e67d76-0da7-42d5-b3b5-df567f8ebaf6",
            "skipped": false
          },
          {
            "title": "should delete a SINGLE entry on /entry/<id> DELETE",
            "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
            "timedOut": false,
            "duration": 22,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.have.property(<span class=\"hljs-string\">'REMOVED'</span>);<br>        res.body.REMOVED.should.be.a(<span class=\"hljs-string\">'object'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.REMOVED.user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.REMOVED.sum.should.equal(<span class=\"hljs-number\">100.10</span>);<br>        res.body.REMOVED.comment.should.equal(<span class=\"hljs-string\">'New nice entry'</span>);<br>        done();<br>    });<br>  });",
            "isRoot": false,
            "uuid": "6d8838e5-a270-4601-82d4-c7ae9fd8d6ae",
            "parentUUID": "22e67d76-0da7-42d5-b3b5-df567f8ebaf6",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 119
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "5801c43f-605f-4f09-8cf4-6c8c3f2b0e21",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should show main page",
      "fullTitle": "General Tests:  should show main page",
      "timedOut": false,
      "duration": 56,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "cad01a7f-be89-4646-b1b5-fe3190043597",
      "parentUUID": "d3de6b22-e93b-43ab-8686-0c923de03a40",
      "skipped": false
    },
    {
      "title": "should list ALL entries on /api/entries GET",
      "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
      "timedOut": false,
      "duration": 25,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry'</span>)<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "b0689b7f-377f-4abe-ad50-7207c0c97ea1",
      "parentUUID": "22e67d76-0da7-42d5-b3b5-df567f8ebaf6",
      "skipped": false
    },
    {
      "title": "should post a new entry on /api/entries POST",
      "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
      "timedOut": false,
      "duration": 72,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "b14d2631-6ffc-4144-9ff1-57c20de44906",
      "parentUUID": "22e67d76-0da7-42d5-b3b5-df567f8ebaf6",
      "skipped": false
    },
    {
      "title": "should delete a SINGLE entry on /entry/<id> DELETE",
      "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.have.property(<span class=\"hljs-string\">'REMOVED'</span>);<br>        res.body.REMOVED.should.be.a(<span class=\"hljs-string\">'object'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.REMOVED.user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.REMOVED.sum.should.equal(<span class=\"hljs-number\">100.10</span>);<br>        res.body.REMOVED.comment.should.equal(<span class=\"hljs-string\">'New nice entry'</span>);<br>        done();<br>    });<br>  });",
      "isRoot": false,
      "uuid": "e210db66-7998-4804-b21a-8c2b935915c7",
      "parentUUID": "22e67d76-0da7-42d5-b3b5-df567f8ebaf6",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should show main page",
      "fullTitle": "General Tests:  should show main page",
      "timedOut": false,
      "duration": 56,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "a5f6a2a0-0f7b-4d1a-a8c0-07d3f9c78287",
      "parentUUID": "d3de6b22-e93b-43ab-8686-0c923de03a40",
      "skipped": false
    },
    {
      "title": "should list ALL entries on /api/entries GET",
      "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
      "timedOut": false,
      "duration": 25,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry'</span>)<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "451cd777-8007-4711-a3b9-71291305c8bf",
      "parentUUID": "22e67d76-0da7-42d5-b3b5-df567f8ebaf6",
      "skipped": false
    },
    {
      "title": "should post a new entry on /api/entries POST",
      "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
      "timedOut": false,
      "duration": 72,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "d86cc037-2c94-4290-88ee-9a39233e4d2a",
      "parentUUID": "22e67d76-0da7-42d5-b3b5-df567f8ebaf6",
      "skipped": false
    },
    {
      "title": "should delete a SINGLE entry on /entry/<id> DELETE",
      "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.have.property(<span class=\"hljs-string\">'REMOVED'</span>);<br>        res.body.REMOVED.should.be.a(<span class=\"hljs-string\">'object'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.REMOVED.user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.REMOVED.sum.should.equal(<span class=\"hljs-number\">100.10</span>);<br>        res.body.REMOVED.comment.should.equal(<span class=\"hljs-string\">'New nice entry'</span>);<br>        done();<br>    });<br>  });",
      "isRoot": false,
      "uuid": "7cba0c6a-9d68-40fb-b1c7-cee6d72489a2",
      "parentUUID": "22e67d76-0da7-42d5-b3b5-df567f8ebaf6",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}