{
  "reportTitle": "js-finance",
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 5,
    "pending": 0,
    "failures": 1,
    "start": "2016-12-20T03:29:29.885Z",
    "end": "2016-12-20T03:29:30.367Z",
    "duration": 482,
    "testsRegistered": 6,
    "passPercent": 83.3,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "General Tests: ",
        "suites": [],
        "tests": [
          {
            "title": "should show main page",
            "fullTitle": "General Tests:  should show main page",
            "timedOut": false,
            "duration": 69,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "ff2f38a3-0f4b-4d5b-b760-f6e1de656c5b",
            "parentUUID": "4af195cb-e1e7-4aa7-abbd-8f5f3bacbc62",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/test.js",
        "uuid": "4af195cb-e1e7-4aa7-abbd-8f5f3bacbc62",
        "fullFile": "/home/corw/DEV/GIT/js-finance/test/test.js",
        "passes": [
          {
            "title": "should show main page",
            "fullTitle": "General Tests:  should show main page",
            "timedOut": false,
            "duration": 69,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "ff2f38a3-0f4b-4d5b-b760-f6e1de656c5b",
            "parentUUID": "4af195cb-e1e7-4aa7-abbd-8f5f3bacbc62",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 69
      },
      {
        "title": "API Tests: ",
        "suites": [],
        "tests": [
          {
            "title": "should list ALL entries on /api/entries GET",
            "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "b28a7867-f82c-4d25-9b7c-c6a1da635092",
            "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
            "skipped": false
          },
          {
            "title": "should get entry by ID on /api/entry/:id GET",
            "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "f0131701-5a76-4e45-92c3-cea49c1a61bc",
            "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
            "skipped": false
          },
          {
            "title": "should post a new entry on /api/entries POST",
            "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
            "err": {
              "name": "AssertionError",
              "message": "expected { Object (domain, _events, ...) } to have status code 200 but got 403",
              "stack": "AssertionError: expected { <span class=\"hljs-built_in\">Object</span> (domain, _events, ...) } to have status code <span class=\"hljs-number\">200</span> but got <span class=\"hljs-number\">403</span><br>    at test/test.js:<span class=\"hljs-number\">126</span>:<span class=\"hljs-number\">25</span><br>    at Test.Request.callback (node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">631</span>:<span class=\"hljs-number\">3</span>)<br>    at IncomingMessage.&lt;anonymous&gt; (node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">795</span>:<span class=\"hljs-number\">18</span>)<br>    at endReadableNT (_stream_readable.js:<span class=\"hljs-number\">974</span>:<span class=\"hljs-number\">12</span>)<br>    at _combinedTickCallback (internal/process/next_tick.js:<span class=\"hljs-number\">74</span>:<span class=\"hljs-number\">11</span>)<br>    at process._tickCallback (internal/process/next_tick.js:<span class=\"hljs-number\">98</span>:<span class=\"hljs-number\">9</span>)"
            },
            "isRoot": false,
            "uuid": "a022bd09-db92-4f1e-8163-893b34da10a8",
            "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
            "skipped": false
          },
          {
            "title": "should change an entry on /api/entry/:id PUT",
            "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
            "timedOut": false,
            "duration": 35,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "7796ef04-b275-4b43-84c2-f2502c732c97",
            "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
            "skipped": false
          },
          {
            "title": "should delete a SINGLE entry on /entry/<id> DELETE",
            "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
            "timedOut": false,
            "duration": 30,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "1ffe6d62-8b50-4789-a1f9-a083e3b47b31",
            "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/test.js",
        "uuid": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
        "fullFile": "/home/corw/DEV/GIT/js-finance/test/test.js",
        "passes": [
          {
            "title": "should list ALL entries on /api/entries GET",
            "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "b28a7867-f82c-4d25-9b7c-c6a1da635092",
            "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
            "skipped": false
          },
          {
            "title": "should get entry by ID on /api/entry/:id GET",
            "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "f0131701-5a76-4e45-92c3-cea49c1a61bc",
            "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
            "skipped": false
          },
          {
            "title": "should change an entry on /api/entry/:id PUT",
            "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
            "timedOut": false,
            "duration": 35,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "7796ef04-b275-4b43-84c2-f2502c732c97",
            "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
            "skipped": false
          },
          {
            "title": "should delete a SINGLE entry on /entry/<id> DELETE",
            "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
            "timedOut": false,
            "duration": 30,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "1ffe6d62-8b50-4789-a1f9-a083e3b47b31",
            "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
            "skipped": false
          }
        ],
        "failures": [
          {
            "title": "should post a new entry on /api/entries POST",
            "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
            "err": {
              "name": "AssertionError",
              "message": "expected { Object (domain, _events, ...) } to have status code 200 but got 403",
              "stack": "AssertionError: expected { <span class=\"hljs-built_in\">Object</span> (domain, _events, ...) } to have status code <span class=\"hljs-number\">200</span> but got <span class=\"hljs-number\">403</span><br>    at test/test.js:<span class=\"hljs-number\">126</span>:<span class=\"hljs-number\">25</span><br>    at Test.Request.callback (node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">631</span>:<span class=\"hljs-number\">3</span>)<br>    at IncomingMessage.&lt;anonymous&gt; (node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">795</span>:<span class=\"hljs-number\">18</span>)<br>    at endReadableNT (_stream_readable.js:<span class=\"hljs-number\">974</span>:<span class=\"hljs-number\">12</span>)<br>    at _combinedTickCallback (internal/process/next_tick.js:<span class=\"hljs-number\">74</span>:<span class=\"hljs-number\">11</span>)<br>    at process._tickCallback (internal/process/next_tick.js:<span class=\"hljs-number\">98</span>:<span class=\"hljs-number\">9</span>)"
            },
            "isRoot": false,
            "uuid": "a022bd09-db92-4f1e-8163-893b34da10a8",
            "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
            "skipped": false
          }
        ],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 4,
        "totalFailures": 1,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": true,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 108
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "705da9c9-3c98-4482-b2c6-34cac0912f75",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should show main page",
      "fullTitle": "General Tests:  should show main page",
      "timedOut": false,
      "duration": 69,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "7de88777-1953-4a79-b1dc-f961343488fc",
      "parentUUID": "4af195cb-e1e7-4aa7-abbd-8f5f3bacbc62",
      "skipped": false
    },
    {
      "title": "should list ALL entries on /api/entries GET",
      "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "a4b4a167-c69a-4657-9a86-98a3d55438db",
      "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
      "skipped": false
    },
    {
      "title": "should get entry by ID on /api/entry/:id GET",
      "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "d45730b6-ae6d-4cfc-8993-a437796c0c4a",
      "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
      "skipped": false
    },
    {
      "title": "should post a new entry on /api/entries POST",
      "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
      "err": {
        "name": "AssertionError",
        "message": "expected { Object (domain, _events, ...) } to have status code 200 but got 403",
        "stack": "AssertionError: expected { <span class=\"hljs-built_in\">Object</span> (domain, _events, ...) } to have status code <span class=\"hljs-number\">200</span> but got <span class=\"hljs-number\">403</span><br>    at test/test.js:<span class=\"hljs-number\">126</span>:<span class=\"hljs-number\">25</span><br>    at Test.Request.callback (node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">631</span>:<span class=\"hljs-number\">3</span>)<br>    at IncomingMessage.&lt;anonymous&gt; (node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">795</span>:<span class=\"hljs-number\">18</span>)<br>    at endReadableNT (_stream_readable.js:<span class=\"hljs-number\">974</span>:<span class=\"hljs-number\">12</span>)<br>    at _combinedTickCallback (internal/process/next_tick.js:<span class=\"hljs-number\">74</span>:<span class=\"hljs-number\">11</span>)<br>    at process._tickCallback (internal/process/next_tick.js:<span class=\"hljs-number\">98</span>:<span class=\"hljs-number\">9</span>)"
      },
      "isRoot": false,
      "uuid": "9e215f41-6077-4459-aa8f-aa4af3b6342c",
      "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
      "skipped": false
    },
    {
      "title": "should change an entry on /api/entry/:id PUT",
      "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
      "timedOut": false,
      "duration": 35,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "df82b6ec-3174-4a8a-ae46-ccf9a8a5bf7a",
      "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
      "skipped": false
    },
    {
      "title": "should delete a SINGLE entry on /entry/<id> DELETE",
      "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
      "timedOut": false,
      "duration": 30,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "307d2288-6344-43a9-8539-0a68439d884d",
      "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should show main page",
      "fullTitle": "General Tests:  should show main page",
      "timedOut": false,
      "duration": 69,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "9a2da99e-6202-4b96-b7c2-263fade73037",
      "parentUUID": "4af195cb-e1e7-4aa7-abbd-8f5f3bacbc62",
      "skipped": false
    },
    {
      "title": "should list ALL entries on /api/entries GET",
      "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "55ea387a-64ac-4e6d-b1e3-9a256f24335c",
      "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
      "skipped": false
    },
    {
      "title": "should get entry by ID on /api/entry/:id GET",
      "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "7a0bf68d-ba62-4e53-ad5e-99e513aa084b",
      "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
      "skipped": false
    },
    {
      "title": "should change an entry on /api/entry/:id PUT",
      "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
      "timedOut": false,
      "duration": 35,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "e5063b3a-8c9c-4bab-85a0-b66feac7e4ce",
      "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
      "skipped": false
    },
    {
      "title": "should delete a SINGLE entry on /entry/<id> DELETE",
      "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
      "timedOut": false,
      "duration": 30,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "bf87b920-7005-452c-8a0d-77027c2c3104",
      "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
      "skipped": false
    }
  ],
  "allFailures": [
    {
      "title": "should post a new entry on /api/entries POST",
      "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
      "err": {
        "name": "AssertionError",
        "message": "expected { Object (domain, _events, ...) } to have status code 200 but got 403",
        "stack": "AssertionError: expected { <span class=\"hljs-built_in\">Object</span> (domain, _events, ...) } to have status code <span class=\"hljs-number\">200</span> but got <span class=\"hljs-number\">403</span><br>    at test/test.js:<span class=\"hljs-number\">126</span>:<span class=\"hljs-number\">25</span><br>    at Test.Request.callback (node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">631</span>:<span class=\"hljs-number\">3</span>)<br>    at IncomingMessage.&lt;anonymous&gt; (node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">795</span>:<span class=\"hljs-number\">18</span>)<br>    at endReadableNT (_stream_readable.js:<span class=\"hljs-number\">974</span>:<span class=\"hljs-number\">12</span>)<br>    at _combinedTickCallback (internal/process/next_tick.js:<span class=\"hljs-number\">74</span>:<span class=\"hljs-number\">11</span>)<br>    at process._tickCallback (internal/process/next_tick.js:<span class=\"hljs-number\">98</span>:<span class=\"hljs-number\">9</span>)"
      },
      "isRoot": false,
      "uuid": "32d836c4-c4c1-4e66-bbbe-ef30342570bc",
      "parentUUID": "76f51760-92b5-4fb6-96c3-0d6eec8fa343",
      "skipped": false
    }
  ],
  "copyrightYear": 2016
}