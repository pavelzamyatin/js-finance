{
  "reportTitle": "js-finance",
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2017-03-03T02:55:37.150Z",
    "end": "2017-03-03T02:55:37.543Z",
    "duration": 393,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "General Tests: ",
        "suites": [],
        "tests": [
          {
            "title": "should show main page",
            "fullTitle": "General Tests:  should show main page",
            "timedOut": false,
            "duration": 63,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "0f927671-2a52-4e29-b8c8-4c1738b3356d",
            "parentUUID": "e0b95190-3d48-4d1a-90ed-9df328272c94",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/test.js",
        "uuid": "e0b95190-3d48-4d1a-90ed-9df328272c94",
        "fullFile": "/home/corw/DEV/GIT/js-finance/test/test.js",
        "passes": [
          {
            "title": "should show main page",
            "fullTitle": "General Tests:  should show main page",
            "timedOut": false,
            "duration": 63,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "0f927671-2a52-4e29-b8c8-4c1738b3356d",
            "parentUUID": "e0b95190-3d48-4d1a-90ed-9df328272c94",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 63
      },
      {
        "title": "API Tests: ",
        "suites": [],
        "tests": [
          {
            "title": "should list ALL entries on /api/entries GET",
            "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
            "timedOut": false,
            "duration": 25,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "ee10dd0b-724a-47bb-9303-bc665c6c1e87",
            "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
            "skipped": false
          },
          {
            "title": "should get entry by ID on /api/entry/:id GET",
            "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
            "timedOut": false,
            "duration": 15,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "528fca25-aa30-4931-b10f-4eb5d3baa0d0",
            "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
            "skipped": false
          },
          {
            "title": "should post a new entry on /api/entries POST",
            "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
            "timedOut": false,
            "duration": 119,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/login'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// finding csrf token in login form</span><br>    <span class=\"hljs-keyword\">var</span> $ = cheerio.load(res.text);<br>    <span class=\"hljs-keyword\">var</span> csrf = $(<span class=\"hljs-string\">'input[name=\"_csrf\"]'</span>).val();<br>    <span class=\"hljs-comment\">// post request</span><br>    chai.request(server)<br>      .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>      .set(<span class=\"hljs-string\">'cookie'</span>, res.headers[<span class=\"hljs-string\">'set-cookie'</span>])<br>      .send({<br>        _csrf     : csrf,<br>        user      : <span class=\"hljs-string\">\"test\"</span>,<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">99.99</span>,<br>        category  : <span class=\"hljs-string\">\"Home\"</span>,<br>        comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "e365a262-2706-4954-90d9-293ff6a564a6",
            "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
            "skipped": false
          },
          {
            "title": "should change an entry on /api/entry/:id PUT",
            "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
            "timedOut": false,
            "duration": 32,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "812807ba-aba2-45c0-a934-087d0653b56a",
            "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
            "skipped": false
          },
          {
            "title": "should delete a SINGLE entry on /entry/<id> DELETE",
            "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "e1acb576-d4a3-4a51-831c-3cbd1c707348",
            "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/test.js",
        "uuid": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
        "fullFile": "/home/corw/DEV/GIT/js-finance/test/test.js",
        "passes": [
          {
            "title": "should list ALL entries on /api/entries GET",
            "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
            "timedOut": false,
            "duration": 25,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "ee10dd0b-724a-47bb-9303-bc665c6c1e87",
            "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
            "skipped": false
          },
          {
            "title": "should get entry by ID on /api/entry/:id GET",
            "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
            "timedOut": false,
            "duration": 15,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "528fca25-aa30-4931-b10f-4eb5d3baa0d0",
            "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
            "skipped": false
          },
          {
            "title": "should post a new entry on /api/entries POST",
            "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
            "timedOut": false,
            "duration": 119,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/login'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// finding csrf token in login form</span><br>    <span class=\"hljs-keyword\">var</span> $ = cheerio.load(res.text);<br>    <span class=\"hljs-keyword\">var</span> csrf = $(<span class=\"hljs-string\">'input[name=\"_csrf\"]'</span>).val();<br>    <span class=\"hljs-comment\">// post request</span><br>    chai.request(server)<br>      .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>      .set(<span class=\"hljs-string\">'cookie'</span>, res.headers[<span class=\"hljs-string\">'set-cookie'</span>])<br>      .send({<br>        _csrf     : csrf,<br>        user      : <span class=\"hljs-string\">\"test\"</span>,<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">99.99</span>,<br>        category  : <span class=\"hljs-string\">\"Home\"</span>,<br>        comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "e365a262-2706-4954-90d9-293ff6a564a6",
            "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
            "skipped": false
          },
          {
            "title": "should change an entry on /api/entry/:id PUT",
            "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
            "timedOut": false,
            "duration": 32,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "812807ba-aba2-45c0-a934-087d0653b56a",
            "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
            "skipped": false
          },
          {
            "title": "should delete a SINGLE entry on /entry/<id> DELETE",
            "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "e1acb576-d4a3-4a51-831c-3cbd1c707348",
            "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 209
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "2b42577f-3ec2-4539-9042-5e51a3e93e5b",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should show main page",
      "fullTitle": "General Tests:  should show main page",
      "timedOut": false,
      "duration": 63,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "e400f9f2-4b17-4bee-987f-880ab8de7a80",
      "parentUUID": "e0b95190-3d48-4d1a-90ed-9df328272c94",
      "skipped": false
    },
    {
      "title": "should list ALL entries on /api/entries GET",
      "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
      "timedOut": false,
      "duration": 25,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "188fced2-6060-4624-88d8-8b0ca3961353",
      "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
      "skipped": false
    },
    {
      "title": "should get entry by ID on /api/entry/:id GET",
      "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
      "timedOut": false,
      "duration": 15,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "6862c6cc-f366-48f4-a36b-26e46c57073c",
      "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
      "skipped": false
    },
    {
      "title": "should post a new entry on /api/entries POST",
      "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
      "timedOut": false,
      "duration": 119,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/login'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// finding csrf token in login form</span><br>    <span class=\"hljs-keyword\">var</span> $ = cheerio.load(res.text);<br>    <span class=\"hljs-keyword\">var</span> csrf = $(<span class=\"hljs-string\">'input[name=\"_csrf\"]'</span>).val();<br>    <span class=\"hljs-comment\">// post request</span><br>    chai.request(server)<br>      .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>      .set(<span class=\"hljs-string\">'cookie'</span>, res.headers[<span class=\"hljs-string\">'set-cookie'</span>])<br>      .send({<br>        _csrf     : csrf,<br>        user      : <span class=\"hljs-string\">\"test\"</span>,<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">99.99</span>,<br>        category  : <span class=\"hljs-string\">\"Home\"</span>,<br>        comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "9bc06000-129f-4f6f-ade4-1375cb2ac374",
      "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
      "skipped": false
    },
    {
      "title": "should change an entry on /api/entry/:id PUT",
      "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
      "timedOut": false,
      "duration": 32,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "247a4bee-e20d-4903-8d7b-831d084c2686",
      "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
      "skipped": false
    },
    {
      "title": "should delete a SINGLE entry on /entry/<id> DELETE",
      "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
      "timedOut": false,
      "duration": 18,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "3b36c00e-66e0-4d6d-b316-f86d34b9bc52",
      "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should show main page",
      "fullTitle": "General Tests:  should show main page",
      "timedOut": false,
      "duration": 63,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "31787855-82a5-404b-9c29-671ea21a1e25",
      "parentUUID": "e0b95190-3d48-4d1a-90ed-9df328272c94",
      "skipped": false
    },
    {
      "title": "should list ALL entries on /api/entries GET",
      "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
      "timedOut": false,
      "duration": 25,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "08696080-495e-449f-b3d7-d1b92d017579",
      "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
      "skipped": false
    },
    {
      "title": "should get entry by ID on /api/entry/:id GET",
      "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
      "timedOut": false,
      "duration": 15,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "7e8e2ee2-fd8a-4bf4-8cda-8ffff046941f",
      "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
      "skipped": false
    },
    {
      "title": "should post a new entry on /api/entries POST",
      "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
      "timedOut": false,
      "duration": 119,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/login'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// finding csrf token in login form</span><br>    <span class=\"hljs-keyword\">var</span> $ = cheerio.load(res.text);<br>    <span class=\"hljs-keyword\">var</span> csrf = $(<span class=\"hljs-string\">'input[name=\"_csrf\"]'</span>).val();<br>    <span class=\"hljs-comment\">// post request</span><br>    chai.request(server)<br>      .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>      .set(<span class=\"hljs-string\">'cookie'</span>, res.headers[<span class=\"hljs-string\">'set-cookie'</span>])<br>      .send({<br>        _csrf     : csrf,<br>        user      : <span class=\"hljs-string\">\"test\"</span>,<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">99.99</span>,<br>        category  : <span class=\"hljs-string\">\"Home\"</span>,<br>        comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "fa3472bc-50e4-453c-9880-89f6898194c3",
      "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
      "skipped": false
    },
    {
      "title": "should change an entry on /api/entry/:id PUT",
      "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
      "timedOut": false,
      "duration": 32,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "ac7bab56-0a9a-4d07-8d0f-394bf32ba1e1",
      "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
      "skipped": false
    },
    {
      "title": "should delete a SINGLE entry on /entry/<id> DELETE",
      "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
      "timedOut": false,
      "duration": 18,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "9b97174e-2f43-4f4d-b6fe-ade08a9faf98",
      "parentUUID": "6646fda3-fe32-43f2-8a1a-0bcbca198782",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}