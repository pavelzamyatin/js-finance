{
  "reportTitle": "js-finance",
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 5,
    "pending": 0,
    "failures": 1,
    "start": "2016-12-19T00:56:37.387Z",
    "end": "2016-12-19T00:56:42.024Z",
    "duration": 4637,
    "testsRegistered": 6,
    "passPercent": 83.3,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "General Tests: ",
        "suites": [],
        "tests": [
          {
            "title": "should show main page",
            "fullTitle": "General Tests:  should show main page",
            "timedOut": false,
            "duration": 59,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "a14f9c7e-2e4d-43e1-ba87-a22d1f361c04",
            "parentUUID": "afa65511-f61e-48bc-8026-fd34098a443b",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/test.js",
        "uuid": "afa65511-f61e-48bc-8026-fd34098a443b",
        "fullFile": "/home/corw/DEV/GIT/js-finance/test/test.js",
        "passes": [
          {
            "title": "should show main page",
            "fullTitle": "General Tests:  should show main page",
            "timedOut": false,
            "duration": 59,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "a14f9c7e-2e4d-43e1-ba87-a22d1f361c04",
            "parentUUID": "afa65511-f61e-48bc-8026-fd34098a443b",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 59
      },
      {
        "title": "API Tests: ",
        "suites": [],
        "tests": [
          {
            "title": "should list ALL entries on /api/entries GET",
            "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
            "timedOut": false,
            "duration": 263,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "bbeaf305-ae91-4e2d-af9d-1d97f5497208",
            "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
            "skipped": false
          },
          {
            "title": "should get entry by ID on /api/entry/:id GET",
            "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
            "timedOut": false,
            "duration": 453,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "203c6290-d65d-4b4e-9343-97ddd3ee0448",
            "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
            "skipped": false
          },
          {
            "title": "should post a new entry on /api/entries POST",
            "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
            "err": {
              "name": "AssertionError",
              "message": "expected { Object (domain, _events, ...) } to have status code 200 but got 403",
              "stack": "AssertionError: expected { <span class=\"hljs-built_in\">Object</span> (domain, _events, ...) } to have status code <span class=\"hljs-number\">200</span> but got <span class=\"hljs-number\">403</span><br>    at test/test.js:<span class=\"hljs-number\">126</span>:<span class=\"hljs-number\">25</span><br>    at Test.Request.callback (node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">631</span>:<span class=\"hljs-number\">3</span>)<br>    at IncomingMessage.&lt;anonymous&gt; (node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">795</span>:<span class=\"hljs-number\">18</span>)<br>    at endReadableNT (_stream_readable.js:<span class=\"hljs-number\">974</span>:<span class=\"hljs-number\">12</span>)<br>    at _combinedTickCallback (internal/process/next_tick.js:<span class=\"hljs-number\">74</span>:<span class=\"hljs-number\">11</span>)<br>    at process._tickCallback (internal/process/next_tick.js:<span class=\"hljs-number\">98</span>:<span class=\"hljs-number\">9</span>)"
            },
            "isRoot": false,
            "uuid": "f6de6564-51bf-4234-bf5c-1b2abd98511c",
            "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
            "skipped": false
          },
          {
            "title": "should change an entry on /api/entry/:id PUT",
            "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
            "timedOut": false,
            "duration": 679,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "dc20926a-26b2-4776-a7c1-64faf1bd97b1",
            "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
            "skipped": false
          },
          {
            "title": "should delete a SINGLE entry on /entry/<id> DELETE",
            "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
            "timedOut": false,
            "duration": 455,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "aa8820ff-e8ee-49fa-8166-31b8877181aa",
            "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/test.js",
        "uuid": "c8d51bbd-272b-4193-bfdf-08bed252719d",
        "fullFile": "/home/corw/DEV/GIT/js-finance/test/test.js",
        "passes": [
          {
            "title": "should list ALL entries on /api/entries GET",
            "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
            "timedOut": false,
            "duration": 263,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "bbeaf305-ae91-4e2d-af9d-1d97f5497208",
            "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
            "skipped": false
          },
          {
            "title": "should get entry by ID on /api/entry/:id GET",
            "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
            "timedOut": false,
            "duration": 453,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "203c6290-d65d-4b4e-9343-97ddd3ee0448",
            "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
            "skipped": false
          },
          {
            "title": "should change an entry on /api/entry/:id PUT",
            "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
            "timedOut": false,
            "duration": 679,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "dc20926a-26b2-4776-a7c1-64faf1bd97b1",
            "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
            "skipped": false
          },
          {
            "title": "should delete a SINGLE entry on /entry/<id> DELETE",
            "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
            "timedOut": false,
            "duration": 455,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "aa8820ff-e8ee-49fa-8166-31b8877181aa",
            "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
            "skipped": false
          }
        ],
        "failures": [
          {
            "title": "should post a new entry on /api/entries POST",
            "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
            "err": {
              "name": "AssertionError",
              "message": "expected { Object (domain, _events, ...) } to have status code 200 but got 403",
              "stack": "AssertionError: expected { <span class=\"hljs-built_in\">Object</span> (domain, _events, ...) } to have status code <span class=\"hljs-number\">200</span> but got <span class=\"hljs-number\">403</span><br>    at test/test.js:<span class=\"hljs-number\">126</span>:<span class=\"hljs-number\">25</span><br>    at Test.Request.callback (node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">631</span>:<span class=\"hljs-number\">3</span>)<br>    at IncomingMessage.&lt;anonymous&gt; (node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">795</span>:<span class=\"hljs-number\">18</span>)<br>    at endReadableNT (_stream_readable.js:<span class=\"hljs-number\">974</span>:<span class=\"hljs-number\">12</span>)<br>    at _combinedTickCallback (internal/process/next_tick.js:<span class=\"hljs-number\">74</span>:<span class=\"hljs-number\">11</span>)<br>    at process._tickCallback (internal/process/next_tick.js:<span class=\"hljs-number\">98</span>:<span class=\"hljs-number\">9</span>)"
            },
            "isRoot": false,
            "uuid": "f6de6564-51bf-4234-bf5c-1b2abd98511c",
            "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
            "skipped": false
          }
        ],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 4,
        "totalFailures": 1,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": true,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1850
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "daa04c27-6858-4653-a70d-9956e3fb6294",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should show main page",
      "fullTitle": "General Tests:  should show main page",
      "timedOut": false,
      "duration": 59,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "93b2e634-b286-41c2-bf76-fb4a9b02a2c8",
      "parentUUID": "afa65511-f61e-48bc-8026-fd34098a443b",
      "skipped": false
    },
    {
      "title": "should list ALL entries on /api/entries GET",
      "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
      "timedOut": false,
      "duration": 263,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "fabe773c-5fa0-492a-963a-007af2535177",
      "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
      "skipped": false
    },
    {
      "title": "should get entry by ID on /api/entry/:id GET",
      "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
      "timedOut": false,
      "duration": 453,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "98723a73-e8fa-4603-9139-ecad88f14daf",
      "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
      "skipped": false
    },
    {
      "title": "should post a new entry on /api/entries POST",
      "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
      "err": {
        "name": "AssertionError",
        "message": "expected { Object (domain, _events, ...) } to have status code 200 but got 403",
        "stack": "AssertionError: expected { <span class=\"hljs-built_in\">Object</span> (domain, _events, ...) } to have status code <span class=\"hljs-number\">200</span> but got <span class=\"hljs-number\">403</span><br>    at test/test.js:<span class=\"hljs-number\">126</span>:<span class=\"hljs-number\">25</span><br>    at Test.Request.callback (node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">631</span>:<span class=\"hljs-number\">3</span>)<br>    at IncomingMessage.&lt;anonymous&gt; (node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">795</span>:<span class=\"hljs-number\">18</span>)<br>    at endReadableNT (_stream_readable.js:<span class=\"hljs-number\">974</span>:<span class=\"hljs-number\">12</span>)<br>    at _combinedTickCallback (internal/process/next_tick.js:<span class=\"hljs-number\">74</span>:<span class=\"hljs-number\">11</span>)<br>    at process._tickCallback (internal/process/next_tick.js:<span class=\"hljs-number\">98</span>:<span class=\"hljs-number\">9</span>)"
      },
      "isRoot": false,
      "uuid": "7e085344-30e1-4179-8ae0-96751ea795ba",
      "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
      "skipped": false
    },
    {
      "title": "should change an entry on /api/entry/:id PUT",
      "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
      "timedOut": false,
      "duration": 679,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "cb44ad35-a623-4664-86dc-06a2caf39752",
      "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
      "skipped": false
    },
    {
      "title": "should delete a SINGLE entry on /entry/<id> DELETE",
      "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
      "timedOut": false,
      "duration": 455,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "134a3dd5-b571-4fff-8cfd-2ca0643272e1",
      "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should show main page",
      "fullTitle": "General Tests:  should show main page",
      "timedOut": false,
      "duration": 59,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "4bfc6de9-c6b9-42fb-9019-51828328b226",
      "parentUUID": "afa65511-f61e-48bc-8026-fd34098a443b",
      "skipped": false
    },
    {
      "title": "should list ALL entries on /api/entries GET",
      "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
      "timedOut": false,
      "duration": 263,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "af247f5c-f9cf-4bc2-90cf-518691ce5150",
      "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
      "skipped": false
    },
    {
      "title": "should get entry by ID on /api/entry/:id GET",
      "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
      "timedOut": false,
      "duration": 453,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "d92a7957-845f-4eca-9324-7d8c84891950",
      "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
      "skipped": false
    },
    {
      "title": "should change an entry on /api/entry/:id PUT",
      "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
      "timedOut": false,
      "duration": 679,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "8d6cbe32-2119-4ca6-9a72-1dfd700890ba",
      "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
      "skipped": false
    },
    {
      "title": "should delete a SINGLE entry on /entry/<id> DELETE",
      "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
      "timedOut": false,
      "duration": 455,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id.should.equal(get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "9b12180c-9d18-41ea-a56a-417d3931f8a0",
      "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
      "skipped": false
    }
  ],
  "allFailures": [
    {
      "title": "should post a new entry on /api/entries POST",
      "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
      "err": {
        "name": "AssertionError",
        "message": "expected { Object (domain, _events, ...) } to have status code 200 but got 403",
        "stack": "AssertionError: expected { <span class=\"hljs-built_in\">Object</span> (domain, _events, ...) } to have status code <span class=\"hljs-number\">200</span> but got <span class=\"hljs-number\">403</span><br>    at test/test.js:<span class=\"hljs-number\">126</span>:<span class=\"hljs-number\">25</span><br>    at Test.Request.callback (node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">631</span>:<span class=\"hljs-number\">3</span>)<br>    at IncomingMessage.&lt;anonymous&gt; (node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">795</span>:<span class=\"hljs-number\">18</span>)<br>    at endReadableNT (_stream_readable.js:<span class=\"hljs-number\">974</span>:<span class=\"hljs-number\">12</span>)<br>    at _combinedTickCallback (internal/process/next_tick.js:<span class=\"hljs-number\">74</span>:<span class=\"hljs-number\">11</span>)<br>    at process._tickCallback (internal/process/next_tick.js:<span class=\"hljs-number\">98</span>:<span class=\"hljs-number\">9</span>)"
      },
      "isRoot": false,
      "uuid": "2cbe1d33-b8d4-420c-a8db-3ca0ab397c30",
      "parentUUID": "c8d51bbd-272b-4193-bfdf-08bed252719d",
      "skipped": false
    }
  ],
  "copyrightYear": 2016
}