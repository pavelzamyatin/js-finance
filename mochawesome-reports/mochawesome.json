{
  "reportTitle": "js-finance",
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2016-12-12T06:06:40.533Z",
    "end": "2016-12-12T06:06:40.832Z",
    "duration": 299,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "General Tests: ",
        "suites": [],
        "tests": [
          {
            "title": "should show main page",
            "fullTitle": "General Tests:  should show main page",
            "timedOut": false,
            "duration": 57,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "908544a1-88eb-4e89-9395-a9c267f52531",
            "parentUUID": "f46f5d03-eeab-4ec2-8381-110e43014025",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/test.js",
        "uuid": "f46f5d03-eeab-4ec2-8381-110e43014025",
        "fullFile": "/home/corw/DEV/GIT/js-finance/test/test.js",
        "passes": [
          {
            "title": "should show main page",
            "fullTitle": "General Tests:  should show main page",
            "timedOut": false,
            "duration": 57,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "908544a1-88eb-4e89-9395-a9c267f52531",
            "parentUUID": "f46f5d03-eeab-4ec2-8381-110e43014025",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 57
      },
      {
        "title": "API Tests: ",
        "suites": [],
        "tests": [
          {
            "title": "should list ALL entries on /api/entries GET",
            "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
            "timedOut": false,
            "duration": 27,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "71872b4e-df5d-44c7-925e-577725152e88",
            "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
            "skipped": false
          },
          {
            "title": "should get entry by ID on /api/entry/:id GET",
            "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
            "timedOut": false,
            "duration": 15,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "757730b1-f932-41e3-89a2-ae76119b91c2",
            "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
            "skipped": false
          },
          {
            "title": "should post a new entry on /api/entries POST",
            "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
            "timedOut": false,
            "duration": 87,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "1fb7c57c-cb85-43c3-8247-d4b9b0daef11",
            "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
            "skipped": false
          },
          {
            "title": "should change an entry on /api/entry/:id PUT",
            "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "420922c2-c940-44f9-bbde-fe5e9fda9506",
            "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
            "skipped": false
          },
          {
            "title": "should delete a SINGLE entry on /entry/<id> DELETE",
            "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.have.property(<span class=\"hljs-string\">'REMOVED'</span>);<br>        res.body.REMOVED.should.be.a(<span class=\"hljs-string\">'object'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.REMOVED.user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.REMOVED.sum.should.equal(<span class=\"hljs-number\">100.10</span>);<br>        res.body.REMOVED.comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "e4f6af66-e9f4-4f83-ad7d-ff52d9da2867",
            "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/test.js",
        "uuid": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
        "fullFile": "/home/corw/DEV/GIT/js-finance/test/test.js",
        "passes": [
          {
            "title": "should list ALL entries on /api/entries GET",
            "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
            "timedOut": false,
            "duration": 27,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "71872b4e-df5d-44c7-925e-577725152e88",
            "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
            "skipped": false
          },
          {
            "title": "should get entry by ID on /api/entry/:id GET",
            "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
            "timedOut": false,
            "duration": 15,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "757730b1-f932-41e3-89a2-ae76119b91c2",
            "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
            "skipped": false
          },
          {
            "title": "should post a new entry on /api/entries POST",
            "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
            "timedOut": false,
            "duration": 87,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
            "isRoot": false,
            "uuid": "1fb7c57c-cb85-43c3-8247-d4b9b0daef11",
            "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
            "skipped": false
          },
          {
            "title": "should change an entry on /api/entry/:id PUT",
            "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "420922c2-c940-44f9-bbde-fe5e9fda9506",
            "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
            "skipped": false
          },
          {
            "title": "should delete a SINGLE entry on /entry/<id> DELETE",
            "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.have.property(<span class=\"hljs-string\">'REMOVED'</span>);<br>        res.body.REMOVED.should.be.a(<span class=\"hljs-string\">'object'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.REMOVED.user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.REMOVED.sum.should.equal(<span class=\"hljs-number\">100.10</span>);<br>        res.body.REMOVED.comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>);<br>        done();<br>      });<br>  });",
            "isRoot": false,
            "uuid": "e4f6af66-e9f4-4f83-ad7d-ff52d9da2867",
            "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 167
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "d8941fbf-e937-400e-9151-0c26eec8865f",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should show main page",
      "fullTitle": "General Tests:  should show main page",
      "timedOut": false,
      "duration": 57,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "0a09a28c-5067-4287-9069-ce35c8456e1e",
      "parentUUID": "f46f5d03-eeab-4ec2-8381-110e43014025",
      "skipped": false
    },
    {
      "title": "should list ALL entries on /api/entries GET",
      "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
      "timedOut": false,
      "duration": 27,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "c469f715-780b-4a1d-9bee-a5b10a0ce340",
      "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
      "skipped": false
    },
    {
      "title": "should get entry by ID on /api/entry/:id GET",
      "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
      "timedOut": false,
      "duration": 15,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "b444deff-e483-4b81-adf0-ce338740fa54",
      "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
      "skipped": false
    },
    {
      "title": "should post a new entry on /api/entries POST",
      "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
      "timedOut": false,
      "duration": 87,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "7342b944-8830-4dce-8a6b-4aacd39dabb6",
      "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
      "skipped": false
    },
    {
      "title": "should change an entry on /api/entry/:id PUT",
      "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "493ace35-9369-4d56-9c90-e1dfbc6f8202",
      "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
      "skipped": false
    },
    {
      "title": "should delete a SINGLE entry on /entry/<id> DELETE",
      "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.have.property(<span class=\"hljs-string\">'REMOVED'</span>);<br>        res.body.REMOVED.should.be.a(<span class=\"hljs-string\">'object'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.REMOVED.user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.REMOVED.sum.should.equal(<span class=\"hljs-number\">100.10</span>);<br>        res.body.REMOVED.comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "df296e9f-55ae-40a3-97e4-597d80a45c9e",
      "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should show main page",
      "fullTitle": "General Tests:  should show main page",
      "timedOut": false,
      "duration": 57,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "b2de4c0f-ace0-40c3-a9df-bbe79d5876e1",
      "parentUUID": "f46f5d03-eeab-4ec2-8381-110e43014025",
      "skipped": false
    },
    {
      "title": "should list ALL entries on /api/entries GET",
      "fullTitle": "API Tests:  should list ALL entries on /api/entries GET",
      "timedOut": false,
      "duration": 27,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "d6e09681-68e6-4f3b-89cb-21b6d23e8069",
      "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
      "skipped": false
    },
    {
      "title": "should get entry by ID on /api/entry/:id GET",
      "fullTitle": "API Tests:  should get entry by ID on /api/entry/:id GET",
      "timedOut": false,
      "duration": 15,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .get(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">100.1</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>)<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "49701da4-531d-4613-bb81-a95b1200ea26",
      "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
      "skipped": false
    },
    {
      "title": "should post a new entry on /api/entries POST",
      "fullTitle": "API Tests:  should post a new entry on /api/entries POST",
      "timedOut": false,
      "duration": 87,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "chai.request(server)<br>  .post(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .send({<br>    user      : <span class=\"hljs-string\">\"test\"</span>,<br>    date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>    sum       : <span class=\"hljs-number\">99.99</span>,<br>    category  : <span class=\"hljs-string\">\"Home\"</span>,<br>    comment   : <span class=\"hljs-string\">\"POST request simple test\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>    res.should.be.json;<br>    res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>    res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>    res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>    res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>    res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].user.should.equal(<span class=\"hljs-string\">'test'</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">99.99</span>);<br>    res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'POST request simple test'</span>);<br>    done();<br>  });",
      "isRoot": false,
      "uuid": "90adedce-c3e2-4f65-b009-293cc46779fe",
      "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
      "skipped": false
    },
    {
      "title": "should change an entry on /api/entry/:id PUT",
      "fullTitle": "API Tests:  should change an entry on /api/entry/:id PUT",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to show the first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    chai.request(server)<br>      .put(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .send({<br>        date      : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(),<br>        sum       : <span class=\"hljs-number\">200.20</span>,<br>        category  : <span class=\"hljs-string\">\"Gardening\"</span>,<br>        comment   : <span class=\"hljs-string\">\"PUT request simple test passed\"</span><br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.be.a(<span class=\"hljs-string\">'Object'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'STATUS'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ERROR'</span>);<br>        res.body.should.have.property(<span class=\"hljs-string\">'ITEMS'</span>);<br>        res.body.STATUS.should.equal(<span class=\"hljs-string\">'SUCCESS'</span>);<br>        res.body.ERROR.should.equal(<span class=\"hljs-string\">''</span>);<br>        res.body.ITEMS.should.be.a(<span class=\"hljs-string\">'Array'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'user'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].sum.should.equal(<span class=\"hljs-number\">200.20</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].category.should.equal(<span class=\"hljs-string\">'Gardening'</span>);<br>        res.body.ITEMS[<span class=\"hljs-number\">0</span>].comment.should.equal(<span class=\"hljs-string\">'PUT request simple test passed'</span>);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "c2603fa9-ed4c-4b22-954d-472c420926f5",
      "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
      "skipped": false
    },
    {
      "title": "should delete a SINGLE entry on /entry/<id> DELETE",
      "fullTitle": "API Tests:  should delete a SINGLE entry on /entry/<id> DELETE",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// grabbing all entries to delere first element</span><br>chai.request(server)<br>  .get(<span class=\"hljs-string\">'/api/entries'</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, get_res</span>) </span>{<br>    <span class=\"hljs-comment\">// removing first element of the table</span><br>    chai.request(server)<br>      .delete(<span class=\"hljs-string\">'/api/entry/'</span> + get_res.body.ITEMS[<span class=\"hljs-number\">0</span>]._id)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, res</span>)</span>{<br>        res.should.have.status(<span class=\"hljs-number\">200</span>);<br>        res.should.be.json;<br>        res.body.should.have.property(<span class=\"hljs-string\">'REMOVED'</span>);<br>        res.body.REMOVED.should.be.a(<span class=\"hljs-string\">'object'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'_id'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'date'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'sum'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'category'</span>);<br>        res.body.REMOVED.should.have.property(<span class=\"hljs-string\">'comment'</span>);<br>        res.body.REMOVED.user.should.equal(<span class=\"hljs-string\">'corw'</span>);<br>        res.body.REMOVED.sum.should.equal(<span class=\"hljs-number\">100.10</span>);<br>        res.body.REMOVED.comment.should.equal(<span class=\"hljs-string\">'New nice entry specially for testing reasons'</span>);<br>        done();<br>      });<br>  });",
      "isRoot": false,
      "uuid": "295fd06b-b3ab-4f1a-aa90-550a9700c5fd",
      "parentUUID": "a7b90f8a-0689-47b1-94c0-589fc96688bd",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}